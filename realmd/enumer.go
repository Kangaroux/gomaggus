// Code generated by "enumer -type=ClientOpcode,ServerOpcode -trimprefix=Op -output=enumer.go"; DO NOT EDIT.

package realmd

import (
	"fmt"
	"strings"
)

const _ClientOpcodeName = "ClientCharCreateClientCharListClientCharDeleteClientPlayerLoginClientLogoutForceClientLogoutRequestClientLogoutCancelClientGetPlayerNameClientGetItemInfoClientStandStateChangeClientCancelTradeClientGetPlayedTimeClientGetTimeClientPingClientAuthSessionClientEnteredZoneClientGetStorageClientPutStorageClientGetTicketStatusClientListBattlegroundsClientSetActiveMoverClientGetNextMailArrivalClientGetLFGStatusClientSetActionBarTogglesClientGetRaidInfoClientGetBattlefieldStatusClientGetLFGDungeonListClientRealmSplitClientSetVoiceEnabledClientSetVoiceChannelClientGetGuildBankMoneyClientGetNumPendingEventsClientGetUITimeClientReadyForAccountDataTimes"
const _ClientOpcodeLowerName = "clientcharcreateclientcharlistclientchardeleteclientplayerloginclientlogoutforceclientlogoutrequestclientlogoutcancelclientgetplayernameclientgetiteminfoclientstandstatechangeclientcanceltradeclientgetplayedtimeclientgettimeclientpingclientauthsessioncliententeredzoneclientgetstorageclientputstorageclientgetticketstatusclientlistbattlegroundsclientsetactivemoverclientgetnextmailarrivalclientgetlfgstatusclientsetactionbartogglesclientgetraidinfoclientgetbattlefieldstatusclientgetlfgdungeonlistclientrealmsplitclientsetvoiceenabledclientsetvoicechannelclientgetguildbankmoneyclientgetnumpendingeventsclientgetuitimeclientreadyforaccountdatatimes"

var _ClientOpcodeMap = map[ClientOpcode]string{
	54:   _ClientOpcodeName[0:16],
	55:   _ClientOpcodeName[16:30],
	56:   _ClientOpcodeName[30:46],
	61:   _ClientOpcodeName[46:63],
	74:   _ClientOpcodeName[63:80],
	75:   _ClientOpcodeName[80:99],
	78:   _ClientOpcodeName[99:117],
	80:   _ClientOpcodeName[117:136],
	86:   _ClientOpcodeName[136:153],
	257:  _ClientOpcodeName[153:175],
	284:  _ClientOpcodeName[175:192],
	460:  _ClientOpcodeName[192:211],
	462:  _ClientOpcodeName[211:224],
	476:  _ClientOpcodeName[224:234],
	493:  _ClientOpcodeName[234:251],
	500:  _ClientOpcodeName[251:268],
	522:  _ClientOpcodeName[268:284],
	523:  _ClientOpcodeName[284:300],
	529:  _ClientOpcodeName[300:321],
	572:  _ClientOpcodeName[321:344],
	618:  _ClientOpcodeName[344:364],
	644:  _ClientOpcodeName[364:388],
	662:  _ClientOpcodeName[388:406],
	703:  _ClientOpcodeName[406:431],
	717:  _ClientOpcodeName[431:448],
	723:  _ClientOpcodeName[448:474],
	878:  _ClientOpcodeName[474:497],
	908:  _ClientOpcodeName[497:513],
	943:  _ClientOpcodeName[513:534],
	979:  _ClientOpcodeName[534:555],
	1022: _ClientOpcodeName[555:578],
	1095: _ClientOpcodeName[578:603],
	1270: _ClientOpcodeName[603:618],
	1279: _ClientOpcodeName[618:648],
}

func (i ClientOpcode) String() string {
	if str, ok := _ClientOpcodeMap[i]; ok {
		return str
	}
	return fmt.Sprintf("ClientOpcode(%d)", i)
}

// An "invalid array index" compiler error signifies that the constant values have changed.
// Re-run the stringer command to generate them again.
func _ClientOpcodeNoOp() {
	var x [1]struct{}
	_ = x[OpClientCharCreate-(54)]
	_ = x[OpClientCharList-(55)]
	_ = x[OpClientCharDelete-(56)]
	_ = x[OpClientPlayerLogin-(61)]
	_ = x[OpClientLogoutForce-(74)]
	_ = x[OpClientLogoutRequest-(75)]
	_ = x[OpClientLogoutCancel-(78)]
	_ = x[OpClientGetPlayerName-(80)]
	_ = x[OpClientGetItemInfo-(86)]
	_ = x[OpClientStandStateChange-(257)]
	_ = x[OpClientCancelTrade-(284)]
	_ = x[OpClientGetPlayedTime-(460)]
	_ = x[OpClientGetTime-(462)]
	_ = x[OpClientPing-(476)]
	_ = x[OpClientAuthSession-(493)]
	_ = x[OpClientEnteredZone-(500)]
	_ = x[OpClientGetStorage-(522)]
	_ = x[OpClientPutStorage-(523)]
	_ = x[OpClientGetTicketStatus-(529)]
	_ = x[OpClientListBattlegrounds-(572)]
	_ = x[OpClientSetActiveMover-(618)]
	_ = x[OpClientGetNextMailArrival-(644)]
	_ = x[OpClientGetLFGStatus-(662)]
	_ = x[OpClientSetActionBarToggles-(703)]
	_ = x[OpClientGetRaidInfo-(717)]
	_ = x[OpClientGetBattlefieldStatus-(723)]
	_ = x[OpClientGetLFGDungeonList-(878)]
	_ = x[OpClientRealmSplit-(908)]
	_ = x[OpClientSetVoiceEnabled-(943)]
	_ = x[OpClientSetVoiceChannel-(979)]
	_ = x[OpClientGetGuildBankMoney-(1022)]
	_ = x[OpClientGetNumPendingEvents-(1095)]
	_ = x[OpClientGetUITime-(1270)]
	_ = x[OpClientReadyForAccountDataTimes-(1279)]
}

var _ClientOpcodeValues = []ClientOpcode{OpClientCharCreate, OpClientCharList, OpClientCharDelete, OpClientPlayerLogin, OpClientLogoutForce, OpClientLogoutRequest, OpClientLogoutCancel, OpClientGetPlayerName, OpClientGetItemInfo, OpClientStandStateChange, OpClientCancelTrade, OpClientGetPlayedTime, OpClientGetTime, OpClientPing, OpClientAuthSession, OpClientEnteredZone, OpClientGetStorage, OpClientPutStorage, OpClientGetTicketStatus, OpClientListBattlegrounds, OpClientSetActiveMover, OpClientGetNextMailArrival, OpClientGetLFGStatus, OpClientSetActionBarToggles, OpClientGetRaidInfo, OpClientGetBattlefieldStatus, OpClientGetLFGDungeonList, OpClientRealmSplit, OpClientSetVoiceEnabled, OpClientSetVoiceChannel, OpClientGetGuildBankMoney, OpClientGetNumPendingEvents, OpClientGetUITime, OpClientReadyForAccountDataTimes}

var _ClientOpcodeNameToValueMap = map[string]ClientOpcode{
	_ClientOpcodeName[0:16]:         OpClientCharCreate,
	_ClientOpcodeLowerName[0:16]:    OpClientCharCreate,
	_ClientOpcodeName[16:30]:        OpClientCharList,
	_ClientOpcodeLowerName[16:30]:   OpClientCharList,
	_ClientOpcodeName[30:46]:        OpClientCharDelete,
	_ClientOpcodeLowerName[30:46]:   OpClientCharDelete,
	_ClientOpcodeName[46:63]:        OpClientPlayerLogin,
	_ClientOpcodeLowerName[46:63]:   OpClientPlayerLogin,
	_ClientOpcodeName[63:80]:        OpClientLogoutForce,
	_ClientOpcodeLowerName[63:80]:   OpClientLogoutForce,
	_ClientOpcodeName[80:99]:        OpClientLogoutRequest,
	_ClientOpcodeLowerName[80:99]:   OpClientLogoutRequest,
	_ClientOpcodeName[99:117]:       OpClientLogoutCancel,
	_ClientOpcodeLowerName[99:117]:  OpClientLogoutCancel,
	_ClientOpcodeName[117:136]:      OpClientGetPlayerName,
	_ClientOpcodeLowerName[117:136]: OpClientGetPlayerName,
	_ClientOpcodeName[136:153]:      OpClientGetItemInfo,
	_ClientOpcodeLowerName[136:153]: OpClientGetItemInfo,
	_ClientOpcodeName[153:175]:      OpClientStandStateChange,
	_ClientOpcodeLowerName[153:175]: OpClientStandStateChange,
	_ClientOpcodeName[175:192]:      OpClientCancelTrade,
	_ClientOpcodeLowerName[175:192]: OpClientCancelTrade,
	_ClientOpcodeName[192:211]:      OpClientGetPlayedTime,
	_ClientOpcodeLowerName[192:211]: OpClientGetPlayedTime,
	_ClientOpcodeName[211:224]:      OpClientGetTime,
	_ClientOpcodeLowerName[211:224]: OpClientGetTime,
	_ClientOpcodeName[224:234]:      OpClientPing,
	_ClientOpcodeLowerName[224:234]: OpClientPing,
	_ClientOpcodeName[234:251]:      OpClientAuthSession,
	_ClientOpcodeLowerName[234:251]: OpClientAuthSession,
	_ClientOpcodeName[251:268]:      OpClientEnteredZone,
	_ClientOpcodeLowerName[251:268]: OpClientEnteredZone,
	_ClientOpcodeName[268:284]:      OpClientGetStorage,
	_ClientOpcodeLowerName[268:284]: OpClientGetStorage,
	_ClientOpcodeName[284:300]:      OpClientPutStorage,
	_ClientOpcodeLowerName[284:300]: OpClientPutStorage,
	_ClientOpcodeName[300:321]:      OpClientGetTicketStatus,
	_ClientOpcodeLowerName[300:321]: OpClientGetTicketStatus,
	_ClientOpcodeName[321:344]:      OpClientListBattlegrounds,
	_ClientOpcodeLowerName[321:344]: OpClientListBattlegrounds,
	_ClientOpcodeName[344:364]:      OpClientSetActiveMover,
	_ClientOpcodeLowerName[344:364]: OpClientSetActiveMover,
	_ClientOpcodeName[364:388]:      OpClientGetNextMailArrival,
	_ClientOpcodeLowerName[364:388]: OpClientGetNextMailArrival,
	_ClientOpcodeName[388:406]:      OpClientGetLFGStatus,
	_ClientOpcodeLowerName[388:406]: OpClientGetLFGStatus,
	_ClientOpcodeName[406:431]:      OpClientSetActionBarToggles,
	_ClientOpcodeLowerName[406:431]: OpClientSetActionBarToggles,
	_ClientOpcodeName[431:448]:      OpClientGetRaidInfo,
	_ClientOpcodeLowerName[431:448]: OpClientGetRaidInfo,
	_ClientOpcodeName[448:474]:      OpClientGetBattlefieldStatus,
	_ClientOpcodeLowerName[448:474]: OpClientGetBattlefieldStatus,
	_ClientOpcodeName[474:497]:      OpClientGetLFGDungeonList,
	_ClientOpcodeLowerName[474:497]: OpClientGetLFGDungeonList,
	_ClientOpcodeName[497:513]:      OpClientRealmSplit,
	_ClientOpcodeLowerName[497:513]: OpClientRealmSplit,
	_ClientOpcodeName[513:534]:      OpClientSetVoiceEnabled,
	_ClientOpcodeLowerName[513:534]: OpClientSetVoiceEnabled,
	_ClientOpcodeName[534:555]:      OpClientSetVoiceChannel,
	_ClientOpcodeLowerName[534:555]: OpClientSetVoiceChannel,
	_ClientOpcodeName[555:578]:      OpClientGetGuildBankMoney,
	_ClientOpcodeLowerName[555:578]: OpClientGetGuildBankMoney,
	_ClientOpcodeName[578:603]:      OpClientGetNumPendingEvents,
	_ClientOpcodeLowerName[578:603]: OpClientGetNumPendingEvents,
	_ClientOpcodeName[603:618]:      OpClientGetUITime,
	_ClientOpcodeLowerName[603:618]: OpClientGetUITime,
	_ClientOpcodeName[618:648]:      OpClientReadyForAccountDataTimes,
	_ClientOpcodeLowerName[618:648]: OpClientReadyForAccountDataTimes,
}

var _ClientOpcodeNames = []string{
	_ClientOpcodeName[0:16],
	_ClientOpcodeName[16:30],
	_ClientOpcodeName[30:46],
	_ClientOpcodeName[46:63],
	_ClientOpcodeName[63:80],
	_ClientOpcodeName[80:99],
	_ClientOpcodeName[99:117],
	_ClientOpcodeName[117:136],
	_ClientOpcodeName[136:153],
	_ClientOpcodeName[153:175],
	_ClientOpcodeName[175:192],
	_ClientOpcodeName[192:211],
	_ClientOpcodeName[211:224],
	_ClientOpcodeName[224:234],
	_ClientOpcodeName[234:251],
	_ClientOpcodeName[251:268],
	_ClientOpcodeName[268:284],
	_ClientOpcodeName[284:300],
	_ClientOpcodeName[300:321],
	_ClientOpcodeName[321:344],
	_ClientOpcodeName[344:364],
	_ClientOpcodeName[364:388],
	_ClientOpcodeName[388:406],
	_ClientOpcodeName[406:431],
	_ClientOpcodeName[431:448],
	_ClientOpcodeName[448:474],
	_ClientOpcodeName[474:497],
	_ClientOpcodeName[497:513],
	_ClientOpcodeName[513:534],
	_ClientOpcodeName[534:555],
	_ClientOpcodeName[555:578],
	_ClientOpcodeName[578:603],
	_ClientOpcodeName[603:618],
	_ClientOpcodeName[618:648],
}

// ClientOpcodeString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func ClientOpcodeString(s string) (ClientOpcode, error) {
	if val, ok := _ClientOpcodeNameToValueMap[s]; ok {
		return val, nil
	}

	if val, ok := _ClientOpcodeNameToValueMap[strings.ToLower(s)]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to ClientOpcode values", s)
}

// ClientOpcodeValues returns all values of the enum
func ClientOpcodeValues() []ClientOpcode {
	return _ClientOpcodeValues
}

// ClientOpcodeStrings returns a slice of all String values of the enum
func ClientOpcodeStrings() []string {
	strs := make([]string, len(_ClientOpcodeNames))
	copy(strs, _ClientOpcodeNames)
	return strs
}

// IsAClientOpcode returns "true" if the value is listed in the enum definition. "false" otherwise
func (i ClientOpcode) IsAClientOpcode() bool {
	_, ok := _ClientOpcodeMap[i]
	return ok
}

const _ServerOpcodeName = "ServerCharCreateServerCharListServerCharDeleteServerCharLoginFailedServerSetTimeSpeedServerLogoutServerLogoutCompleteServerLogoutCancelACKServerGetPlayerNameResponseServerUpdateObjectServerPlayCinematicServerTutorialFlagsServerFactionReputationServerActionButtonsServerInitialSpellsServerHearthLocationServerPlayedTimeServerTimeServerPongServerAuthChallengeServerAuthResponseServerClientStorageTimesServerGetStorageServerCharLoginVerifyWorldServerStandStateServerInitialWorldStatesServerMOTDServerRealmSplitServerSystemFeaturesServerPutStorageOKServerUITime"
const _ServerOpcodeLowerName = "servercharcreateservercharlistserverchardeleteservercharloginfailedserversettimespeedserverlogoutserverlogoutcompleteserverlogoutcancelackservergetplayernameresponseserverupdateobjectserverplaycinematicservertutorialflagsserverfactionreputationserveractionbuttonsserverinitialspellsserverhearthlocationserverplayedtimeservertimeserverpongserverauthchallengeserverauthresponseserverclientstoragetimesservergetstorageservercharloginverifyworldserverstandstateserverinitialworldstatesservermotdserverrealmsplitserversystemfeaturesserverputstorageokserveruitime"

var _ServerOpcodeMap = map[ServerOpcode]string{
	58:   _ServerOpcodeName[0:16],
	59:   _ServerOpcodeName[16:30],
	60:   _ServerOpcodeName[30:46],
	65:   _ServerOpcodeName[46:67],
	66:   _ServerOpcodeName[67:85],
	76:   _ServerOpcodeName[85:97],
	77:   _ServerOpcodeName[97:117],
	79:   _ServerOpcodeName[117:138],
	81:   _ServerOpcodeName[138:165],
	169:  _ServerOpcodeName[165:183],
	250:  _ServerOpcodeName[183:202],
	253:  _ServerOpcodeName[202:221],
	290:  _ServerOpcodeName[221:244],
	297:  _ServerOpcodeName[244:263],
	298:  _ServerOpcodeName[263:282],
	341:  _ServerOpcodeName[282:302],
	461:  _ServerOpcodeName[302:318],
	463:  _ServerOpcodeName[318:328],
	477:  _ServerOpcodeName[328:338],
	492:  _ServerOpcodeName[338:357],
	494:  _ServerOpcodeName[357:375],
	521:  _ServerOpcodeName[375:399],
	524:  _ServerOpcodeName[399:415],
	566:  _ServerOpcodeName[415:441],
	669:  _ServerOpcodeName[441:457],
	706:  _ServerOpcodeName[457:481],
	829:  _ServerOpcodeName[481:491],
	907:  _ServerOpcodeName[491:507],
	969:  _ServerOpcodeName[507:527],
	1123: _ServerOpcodeName[527:545],
	1271: _ServerOpcodeName[545:557],
}

func (i ServerOpcode) String() string {
	if str, ok := _ServerOpcodeMap[i]; ok {
		return str
	}
	return fmt.Sprintf("ServerOpcode(%d)", i)
}

// An "invalid array index" compiler error signifies that the constant values have changed.
// Re-run the stringer command to generate them again.
func _ServerOpcodeNoOp() {
	var x [1]struct{}
	_ = x[OpServerCharCreate-(58)]
	_ = x[OpServerCharList-(59)]
	_ = x[OpServerCharDelete-(60)]
	_ = x[OpServerCharLoginFailed-(65)]
	_ = x[OpServerSetTimeSpeed-(66)]
	_ = x[OpServerLogout-(76)]
	_ = x[OpServerLogoutComplete-(77)]
	_ = x[OpServerLogoutCancelACK-(79)]
	_ = x[OpServerGetPlayerNameResponse-(81)]
	_ = x[OpServerUpdateObject-(169)]
	_ = x[OpServerPlayCinematic-(250)]
	_ = x[OpServerTutorialFlags-(253)]
	_ = x[OpServerFactionReputation-(290)]
	_ = x[OpServerActionButtons-(297)]
	_ = x[OpServerInitialSpells-(298)]
	_ = x[OpServerHearthLocation-(341)]
	_ = x[OpServerPlayedTime-(461)]
	_ = x[OpServerTime-(463)]
	_ = x[OpServerPong-(477)]
	_ = x[OpServerAuthChallenge-(492)]
	_ = x[OpServerAuthResponse-(494)]
	_ = x[OpServerClientStorageTimes-(521)]
	_ = x[OpServerGetStorage-(524)]
	_ = x[OpServerCharLoginVerifyWorld-(566)]
	_ = x[OpServerStandState-(669)]
	_ = x[OpServerInitialWorldStates-(706)]
	_ = x[OpServerMOTD-(829)]
	_ = x[OpServerRealmSplit-(907)]
	_ = x[OpServerSystemFeatures-(969)]
	_ = x[OpServerPutStorageOK-(1123)]
	_ = x[OpServerUITime-(1271)]
}

var _ServerOpcodeValues = []ServerOpcode{OpServerCharCreate, OpServerCharList, OpServerCharDelete, OpServerCharLoginFailed, OpServerSetTimeSpeed, OpServerLogout, OpServerLogoutComplete, OpServerLogoutCancelACK, OpServerGetPlayerNameResponse, OpServerUpdateObject, OpServerPlayCinematic, OpServerTutorialFlags, OpServerFactionReputation, OpServerActionButtons, OpServerInitialSpells, OpServerHearthLocation, OpServerPlayedTime, OpServerTime, OpServerPong, OpServerAuthChallenge, OpServerAuthResponse, OpServerClientStorageTimes, OpServerGetStorage, OpServerCharLoginVerifyWorld, OpServerStandState, OpServerInitialWorldStates, OpServerMOTD, OpServerRealmSplit, OpServerSystemFeatures, OpServerPutStorageOK, OpServerUITime}

var _ServerOpcodeNameToValueMap = map[string]ServerOpcode{
	_ServerOpcodeName[0:16]:         OpServerCharCreate,
	_ServerOpcodeLowerName[0:16]:    OpServerCharCreate,
	_ServerOpcodeName[16:30]:        OpServerCharList,
	_ServerOpcodeLowerName[16:30]:   OpServerCharList,
	_ServerOpcodeName[30:46]:        OpServerCharDelete,
	_ServerOpcodeLowerName[30:46]:   OpServerCharDelete,
	_ServerOpcodeName[46:67]:        OpServerCharLoginFailed,
	_ServerOpcodeLowerName[46:67]:   OpServerCharLoginFailed,
	_ServerOpcodeName[67:85]:        OpServerSetTimeSpeed,
	_ServerOpcodeLowerName[67:85]:   OpServerSetTimeSpeed,
	_ServerOpcodeName[85:97]:        OpServerLogout,
	_ServerOpcodeLowerName[85:97]:   OpServerLogout,
	_ServerOpcodeName[97:117]:       OpServerLogoutComplete,
	_ServerOpcodeLowerName[97:117]:  OpServerLogoutComplete,
	_ServerOpcodeName[117:138]:      OpServerLogoutCancelACK,
	_ServerOpcodeLowerName[117:138]: OpServerLogoutCancelACK,
	_ServerOpcodeName[138:165]:      OpServerGetPlayerNameResponse,
	_ServerOpcodeLowerName[138:165]: OpServerGetPlayerNameResponse,
	_ServerOpcodeName[165:183]:      OpServerUpdateObject,
	_ServerOpcodeLowerName[165:183]: OpServerUpdateObject,
	_ServerOpcodeName[183:202]:      OpServerPlayCinematic,
	_ServerOpcodeLowerName[183:202]: OpServerPlayCinematic,
	_ServerOpcodeName[202:221]:      OpServerTutorialFlags,
	_ServerOpcodeLowerName[202:221]: OpServerTutorialFlags,
	_ServerOpcodeName[221:244]:      OpServerFactionReputation,
	_ServerOpcodeLowerName[221:244]: OpServerFactionReputation,
	_ServerOpcodeName[244:263]:      OpServerActionButtons,
	_ServerOpcodeLowerName[244:263]: OpServerActionButtons,
	_ServerOpcodeName[263:282]:      OpServerInitialSpells,
	_ServerOpcodeLowerName[263:282]: OpServerInitialSpells,
	_ServerOpcodeName[282:302]:      OpServerHearthLocation,
	_ServerOpcodeLowerName[282:302]: OpServerHearthLocation,
	_ServerOpcodeName[302:318]:      OpServerPlayedTime,
	_ServerOpcodeLowerName[302:318]: OpServerPlayedTime,
	_ServerOpcodeName[318:328]:      OpServerTime,
	_ServerOpcodeLowerName[318:328]: OpServerTime,
	_ServerOpcodeName[328:338]:      OpServerPong,
	_ServerOpcodeLowerName[328:338]: OpServerPong,
	_ServerOpcodeName[338:357]:      OpServerAuthChallenge,
	_ServerOpcodeLowerName[338:357]: OpServerAuthChallenge,
	_ServerOpcodeName[357:375]:      OpServerAuthResponse,
	_ServerOpcodeLowerName[357:375]: OpServerAuthResponse,
	_ServerOpcodeName[375:399]:      OpServerClientStorageTimes,
	_ServerOpcodeLowerName[375:399]: OpServerClientStorageTimes,
	_ServerOpcodeName[399:415]:      OpServerGetStorage,
	_ServerOpcodeLowerName[399:415]: OpServerGetStorage,
	_ServerOpcodeName[415:441]:      OpServerCharLoginVerifyWorld,
	_ServerOpcodeLowerName[415:441]: OpServerCharLoginVerifyWorld,
	_ServerOpcodeName[441:457]:      OpServerStandState,
	_ServerOpcodeLowerName[441:457]: OpServerStandState,
	_ServerOpcodeName[457:481]:      OpServerInitialWorldStates,
	_ServerOpcodeLowerName[457:481]: OpServerInitialWorldStates,
	_ServerOpcodeName[481:491]:      OpServerMOTD,
	_ServerOpcodeLowerName[481:491]: OpServerMOTD,
	_ServerOpcodeName[491:507]:      OpServerRealmSplit,
	_ServerOpcodeLowerName[491:507]: OpServerRealmSplit,
	_ServerOpcodeName[507:527]:      OpServerSystemFeatures,
	_ServerOpcodeLowerName[507:527]: OpServerSystemFeatures,
	_ServerOpcodeName[527:545]:      OpServerPutStorageOK,
	_ServerOpcodeLowerName[527:545]: OpServerPutStorageOK,
	_ServerOpcodeName[545:557]:      OpServerUITime,
	_ServerOpcodeLowerName[545:557]: OpServerUITime,
}

var _ServerOpcodeNames = []string{
	_ServerOpcodeName[0:16],
	_ServerOpcodeName[16:30],
	_ServerOpcodeName[30:46],
	_ServerOpcodeName[46:67],
	_ServerOpcodeName[67:85],
	_ServerOpcodeName[85:97],
	_ServerOpcodeName[97:117],
	_ServerOpcodeName[117:138],
	_ServerOpcodeName[138:165],
	_ServerOpcodeName[165:183],
	_ServerOpcodeName[183:202],
	_ServerOpcodeName[202:221],
	_ServerOpcodeName[221:244],
	_ServerOpcodeName[244:263],
	_ServerOpcodeName[263:282],
	_ServerOpcodeName[282:302],
	_ServerOpcodeName[302:318],
	_ServerOpcodeName[318:328],
	_ServerOpcodeName[328:338],
	_ServerOpcodeName[338:357],
	_ServerOpcodeName[357:375],
	_ServerOpcodeName[375:399],
	_ServerOpcodeName[399:415],
	_ServerOpcodeName[415:441],
	_ServerOpcodeName[441:457],
	_ServerOpcodeName[457:481],
	_ServerOpcodeName[481:491],
	_ServerOpcodeName[491:507],
	_ServerOpcodeName[507:527],
	_ServerOpcodeName[527:545],
	_ServerOpcodeName[545:557],
}

// ServerOpcodeString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func ServerOpcodeString(s string) (ServerOpcode, error) {
	if val, ok := _ServerOpcodeNameToValueMap[s]; ok {
		return val, nil
	}

	if val, ok := _ServerOpcodeNameToValueMap[strings.ToLower(s)]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to ServerOpcode values", s)
}

// ServerOpcodeValues returns all values of the enum
func ServerOpcodeValues() []ServerOpcode {
	return _ServerOpcodeValues
}

// ServerOpcodeStrings returns a slice of all String values of the enum
func ServerOpcodeStrings() []string {
	strs := make([]string, len(_ServerOpcodeNames))
	copy(strs, _ServerOpcodeNames)
	return strs
}

// IsAServerOpcode returns "true" if the value is listed in the enum definition. "false" otherwise
func (i ServerOpcode) IsAServerOpcode() bool {
	_, ok := _ServerOpcodeMap[i]
	return ok
}
